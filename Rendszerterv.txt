Digitális receptválogatás

-A rendszer célja

A készítendő rendszer célja egy egyszerűen és könnyen kezelhető, olvasható
recept tároló program elkészítése. A kész programnak meg kell felelnie a
megrendelő által támasztott követelményeknek, így a kezelőfelületnek könnyen
és gyorsan megérthetőnek kell lennie, bárminemű előzetes betanítás nélkül.
A minél egyszerűbb érthetőség érdekében, egyszerű lenyíló listák alkalmazásával
érjük el a kívánt recept, és az ahhoz szükséges hozzávalók megjelenítését.
A programnak nem közvetlen célja az egyes receptek tovább küldése, így
hálózati kapcsolatot nem ígényel, valamint a már tartalmazott receptek
másolása sem a program része. Ez a program által használt JSON fálj 
megfelelő részének továbbításával lehetséges, magán úton, pl. e-mailben.
Későbbi verzókban előfordulhat beépített adatkezelés, azaz harmadik fél
által fejlesztett program nélkül lesz képes a program a tárolt receptek,
illetve a hozzájuk szükséges hozzávalók módosítására, javítására, vagy
az esetleges bővítésére is. Továbbá ezen receptek harmadik félnek való
küldésére is, akár e-mail formátumában.

A Digitális receptválogatás egy olyan szoftver, ami biztosítja a receptek 
gyors és gördülékeny elérését. A program fő funkciója a keresés és a rövid
válaszidő. A szoftver a főzni vágyóknak készül, akik nem tudnak, vagy nem
akarnak mindent papíron tárolni, és elegük van a lassú manuális folyamatokból.
Megj.: A továbbiakban a program kiegészülhet további funkciókkal, mint például
az új receptek feltöltése, törlése és szerkesztése.

A program azért készülne el, hogy minimálissá csökkenthessük a keresés 
folyamatát. A Digitális receptválogatáshoz szükséges folyamatok, a program
megnyitása, betöltése. Ezután a felhasználói felületen megjelenik egy lenyíló
lista, amiből kategóriát választhat. A kategória kiválasztása után egy következő
listából választhatja ki, és böngészhet a receptek között. Az itt megjelenő
receptek listája a kategória kiválasztása után válik kattinthatóvá. A rendszer
azután fogja megejelíteni a kiválasztott receptet, miután a felhasználó választott
és kattintott. Amíg ez nem történik meg, a felhasználó nem fogja látni a receptet
teljes egészében. Ha a user másik kategóriátválaszt, akkor más receptek fognak
megjelenni a listában. A kategorizálással a használók még több időt spórolhatnak,
akkor is ha keresésük célirányos, akkor is, ha csak böngésznek a választási 
lehetőségek között. 

-Üzleti folyamatok modellje

A jelenlegi folyamatok nem felhasználó központú, mivel a papíron lévő
receptek írása,másolása és olvasása időpazarkló,megterhekő is lehet.
Üzleti folyamatnak nevezzük például, hogy a felhasználó használja a 
digitális receptválogatást. Elindítja, kiválasztja milyen eredetű ételt szeretne
készíteni, majd a neki tetsző receptet elkészíti. Ehhez előbb le kell töltenie 
a számítógépére a programot. A program így szolgáltatást nyújt a felhasználónak, 
nem kell a fent említett papíron vagy könyvben lévő recepteket megkersenie, ha el nem veszett. 
Ráadásul több választék is lehet, több mindent tud adni annak aki a programot használja, 
ezzel időtspórolva és pénzt megtakarítva. Az üzleti modellt leírhatjuk UML nyelven, 
illetve a legújabb irányzat szerint BPMN nyelven is. Az üzleti szereplő, 
maga a felhasználó(a felhasználó lehet egy kezdő szakács, háziasszony, baárki, 
aki letölti és használni kezdi a szoftvert)aki egy külső szereplő és 
kapcsolatban van az üzleti folyamatnak, a része annak. Továbbá az üzleti folyamatok 
része az üzleti entitás, ami ebben a szoftverben a receptek. Olyan dolog, 
fogalom amit a folyamat során használnak.

-Követelmények

A szoftvernek alapvető funkcionális és nem funkcionális követelményeknek 
kell teljesülnie. A kezelő felületnek könnyen kezelhetőnek kell lennie, 
hogyaz informatikában és az informatikai eszközökben nem jártas felhasználók 
is tudják használni. A recepteknek jól láthatóan, olvashatóan, magyarul kell 
megjelenniük. Először a felhasználónak legyen lehetősége kiválasztani, hogy 
milyen nemzetiségű ételt szeretne elkészíteni, és utána tudjon keresni a 
receptekben. A programnak a telepítéshez szükséges tárhelye legyen kicsi, 
és élő intenet kapcsolat mellett lehet csak használni, mivel egy JSON fájlból
kéri majd le a szoftver az adatokat(recepteket). A megjelenésnek számítógépen 
olyannak kell lennie, hogy megfelelő legyen a felhasználónak, azonban minél 
kevesebb adatforgalmat emésszen fel.

-Funkcionális terv

A feladat egy számítógépen futó receptválogatási program megtervezése.
A program kérje le egy JSON fájlból a keresési és kiválasztási 
feltételeknek megfelelő receptet, mikor a felhasználó éppen a szoftvert használja.
A rendszert három szereplőre lehet felbontani, a megrendelőre, felhasználókra
és a programozókra. A fejlesztők megtervezik és implementálják a megrendelő igényeit. 
Majd a továbbiakban a felhasználók igényei és észrevételei szerint fogják a 
programozók fejleszteni a felületet. A felület egyszerűsége miatt ne legyen benne
több egymásbaágyazott menü, hanem egymástól független lenyíló lista legyen 
kétfajta nemzeti konyha névvel,utána a felhasználó kiválasztja az egyiket és 
ahhoz tartozó recepteket kapja meg. 

-Fizikai környezet

A program fejlesztéséhez legalább 8-as verziójú Javat fogunk használni.
Ezzel tudjuk elérni, hogy a kívánt platformokra egy verzió fejlesztése
mellett ki tudjuk adni a programot. Illetve, a platformok között az
átjárás biztosított legyen.
Ezek a platformok a következőek:
-Windows 7/8/8.1/10
-Linux
-MacOS.
Tekintve, hogy a programnak egyáltalán nem szerves része, az ügyfelek közötti
adatcsere, így a helyi hálózat állapota, a tűzfal, illetve a nyitott portok
minket ebben az esetben nem érdekelnek. Esetlegesen egy későbbi verzióban igen.
Külsőleg megvásárolt komponenseket nem fogunk használni, minden a program
által használt eszközt, itt helyben fogunk kifejleszteni.


-Absztrakt domain modell

A program felépítese nagyon minimalisztikus, csak két egymás mellett
elhelyezett, lenyíló listából áll, ezek alatt helyezkedik el az a
szövegdoboz, ami a kiválasztott étel receptjét, és hozzávalóit fogja
tartalmazni.
Az első lenyíló lista tartalmazza a JSON fájlban tárolt ételek eredetét,
mint például magyaros vagy olasz. A második lenyíló lista tartalmazza
az ehhez a kategóriához tartozó ételeket. A második lenyíló lista, csak
a megfelelő kategória kiválasztása után fogja az abba tartozó ételek nevét
tartalmazni, előtte egy figyelmeztető szöveget "Kérem válasszon kategóriát!"
kell hogy lásson a felhasználó. Ezzel is segítve a felhasználói élményt,
illetve, az érthetőség elérését. Csakis miután a felhasználó választott
egy konkrét ételt jelenjen meg az étel receptje a lenyíló lista alatti
szövegdobozban! Előtte egy információs szöveget: "Kérem válasszon ételt!"
tartalmazzon!
A recept megjelenítése történhet az étel kiválasztása után egyből automatikusan,
vagy egy gomb megnyomása után is, ez fejlesztési időben dől el.

-Architekturális terv

A program kis tárigényű és internetkapcsolat szükséges, hogy a felhasználók 
használni tudják. A receptek egy Json fájlban találhatóak, de a későbbi lehetséges
fejlesztés során egy távoli adatbázisba lehet majd feltölteni az adatokat, 
és bővíteni receptekkel,adott esetben igény szerint más nemzeti ételekkel. 
A későbbiekben más változások isvárhatóak, több menüpont, választék, de 
továbbra is egyszerűen, átláthatóan, hogy a program használatában nem jártas 
felhasználók ugyanúgy tudják kezelni. A szoftver biztonsága és megbízhatósága 
nem függ külső tényezőktől. A felhasználók számítógépeinek tűzfala elég védelmet nyújt, 
mivel a program használója csak a digitális receptválogatások közül keres,
és nem jön létre adatcsere más felhasználókkal.

-Adatbázis terv

A program az adatok tárolására egy JSON fájlt fog használni. Ebben a fáljban
kell majd eltárolni, mind az étel típusokat, azoknak a neveit, illetve
az elkészítésükhöz használandó alapanyagokat,illetve magát az elkészítést is.
A program által csak olvasható lesz ez a JSON fájl, így az első verziókban
nem lesz lehetőség a programon belülről módosítani a recepteket tartalmazó
fájlt. Se törlésre, bővítésre, vagy hibajavításre nem lesz beépített módszer.
Minden egyes az adatok tárolására használt JSON fájlon való módosítást
kézzel, egy harmadik fél által készített program segítségével kell majd
végrehajtani. Ez későbbi verzókban változhat, így azokban, ha lesznek,
már nem lesz szükség külő program használatára, az adatok módosítására,
vagy bevitelére.

-Implementációs terv

A program megvalósítása a korábbi tervek és képernyőtervek alapján történik. Ehhez
a betervezett programnyelv Java, a platformfüggetlensége, és támogatottsága miatt.
A szoftver a későbbiekben bővíthető legyen, a modulok és a metódusok egyértelműek.


-Tesztterv

A tesztelés során ellenőrizzük, hogy a felhasználói felület megfelelően betöltődött,
a lenyíló listák, a gombok és a kattintható felületek megfelelően működnek.
Ha a felület betöltött, a kategóriákhoz tartozó lenyílólistát vizsgáljuk, megjelenik-e 
minden opció, amiket a fejlesztés során implementáltak. Az opciók kiválaszthatóak,
a szűrő ezekre megfelelően működik, a kategóriáknak megfelelő receptek jelennek
meg. A listát is leellenőrizzük, megegyeznek-e a megjelelő receptek és a tárolóba
mentett elemek. Recept választása esetén a kattintást a program feldolgozza, az
adott receptet megjeleníti hiánytalanul. Ha a fentiekkel nem egyezik meg a szoftver
működése, akkor a teszt sikertelen. Ha minden ennek megfelelően működik, a teszt
sikeres.


-Telepítési terv

A program első verziójában a szoftver csak lokálisan működne, így a felhasználó
a telepítés után az éppen használt eszközön tudná igénybe venni a szolgáltatást.
Majd a webes adattárolás segítségével a felhasználók internetkapcsolat segítségével
több eszközről (amin a program telepítve van)is hozzáférhetnek az adatokhoz.


-Karbantartási terv

A szoftver internetkapcsolat segítségével a telepítési hellyel megegyező helyre
kerülnének ki a frissítések, és az új verziók. A teszttervek az új igények alapján
készülnének el. A regressziós tesztet minden frissítés és új verzió alkalmával 
elvégezzük. Ezek a a teszttervek menüpontban olvashatóak.